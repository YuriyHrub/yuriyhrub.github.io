"use strict";Element.prototype.closest||(Element.prototype.closest=function(e){for(var t=this;t;){if(t.matches(e))return t;t=t.parentElement}return null}),Element.prototype.matches||(Element.prototype.matches=Element.prototype.matchesSelector||Element.prototype.webkitMatchesSelector||Element.prototype.mozMatchesSelector||Element.prototype.msMatchesSelector),"NodeList"in window&&!NodeList.prototype.forEach&&(console.info("polyfill for IE11"),NodeList.prototype.forEach=function(e,t){t=t||window;for(var n=0;n<this.length;n++)e.call(t,this[n],n,this)}),Element.prototype.remove||(Element.prototype.remove=function(){this.parentNode&&this.parentNode.removeChild(this)}),window.onload=function(){var i,o=screen.width;1200<=o&&(i=document.documentElement.clientHeight,document.querySelectorAll(".site-section").forEach(function(e,t){var n=Math.round(e.offsetHeight);if(console.log(n,e.id),n<=i&&"contact"!==e.id){var o=i-n;e.style.paddingTop="".concat(o/2,"px"),e.style.paddingBottom="".concat(o/2,"px")}})),900<=o&&document.querySelector(".pop-up-container").classList.add("pop-up-hidden"),window.addEventListener("resize",function(){1200<=(o=screen.width)&&h(v(d))});var e=document.querySelector(".burger-menu"),n=document.querySelector(".main-menu"),r=document.querySelectorAll(".menu-link"),l=null,s=null;document.addEventListener("click",function(e){var t=e.target;t.closest(".burger-menu")?g():null!==t.closest(".main-menu")||n.classList.contains("menu-hide")?(t.classList.contains("menu-link")&&setTimeout(g,500),t.closest(".pop-up-toggle")&&document.querySelector(".pop-up-container").classList.toggle("pop-up-hidden")):g()}),document.forms.feedback.addEventListener("click",function(){"checkbox"===event.target.type&&event.target.parentElement.classList.toggle("checked")});var a=null;y(document.querySelectorAll(".tab")[0]),document.addEventListener("mouseover",function(e){if(!(o<=1200)){var t=event.target;if(t.closest(".tab")){var n=t;if(n.classList.contains("tab"))y(n);else{for(;!n.classList.contains("tab");)n=n.parentElement;y(n)}}}});var c=document.querySelectorAll(".panel-link"),d=document.querySelectorAll(".site-section"),u=null,m=null;h(v(d));var p=!1,f=document.querySelector(".home-section").offsetHeight;Math.round(document.querySelector(".feedback-section").getBoundingClientRect().top);function h(e){if(!(o<1200)){var t=document.documentElement.clientHeight,n=document.documentElement.scrollTop+t/2;e.forEach(function(e,t){if(n>=e.top&&n<=e.bottom){if(u=c[t],l=r[t],null!==m&&m!==u&&(m.classList.remove("link-active"),s.classList.remove("link-active")),u.classList.contains("link-active"))return;u.classList.add("link-active"),l.classList.add("link-active"),m=u,s=l}})}}function y(e){if(!(o<1200)){null!==a&&a!==e&&a.classList.remove("tab-active"),a=e;var t=document.querySelector(".home-tabs").getBoundingClientRect().left,n=a.getBoundingClientRect().left;document.querySelector(".tabs-toggle").style.left="".concat(n-t,"px"),a.classList.add("tab-active")}}function g(){e.classList.toggle("js-active"),n.classList.toggle("menu-hide")}function v(e){var n=[],o=document.documentElement.scrollTop;return e.forEach(function(e){var t=e.getBoundingClientRect();n.push({id:e.id,top:t.top+o,right:t.right+o,bottom:t.bottom+o,left:t.left+o})}),n}document.addEventListener("scroll",function(e){var t=document.documentElement.scrollTop,n=Math.round(document.querySelector(".feedback-section").getBoundingClientRect().top);if(!p&&f-10<=t){var o=document.createElement("a");o.href="#hire-us",o.innerHTML="Hire us",o.classList.add("btn-fixed"),document.body.appendChild(o),p=!0}if(p&&n<=screen.height/2&&(document.querySelector(".btn-fixed").remove(),p=!1),p&&t+10<=f&&(document.querySelector(".btn-fixed").remove(),p=!1),h(v(d)),900<=screen.width){var i=document.querySelector(".pop-up-container"),r=document.getElementById("map").getBoundingClientRect().top;r<=50&&i.classList.contains("pop-up-hidden")&&i.classList.remove("pop-up-hidden"),r<0&&!i.classList.contains("pop-up-hidden")&&i.classList.add("pop-up-hidden")}})},window.initMap=function(){var e={lat:49.82087,lng:23.985022},t=new google.maps.Map(document.getElementById("map"),{center:e,zoom:12,disableDefaultUI:!0,styles:[{featureType:"all",elementType:"labels.text.fill",stylers:[{saturation:36},{color:"#707070"},{lightness:40}]},{featureType:"all",elementType:"labels.text.stroke",stylers:[{visibility:"on"},{color:"#000000"},{lightness:16}]},{featureType:"all",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"administrative",elementType:"geometry.fill",stylers:[{color:"#000000"},{lightness:20}]},{featureType:"administrative",elementType:"geometry.stroke",stylers:[{color:"#000000"},{lightness:17},{weight:1.2}]},{featureType:"landscape",elementType:"geometry",stylers:[{color:"#424242"}]},{featureType:"poi",elementType:"geometry",stylers:[{color:"#000000"},{lightness:21}]},{featureType:"poi",elementType:"labels",stylers:[{visibility:"on"}]},{featureType:"poi",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"road.highway",elementType:"geometry.fill",stylers:[{lightness:17},{color:"#484848"}]},{featureType:"road.highway",elementType:"geometry.stroke",stylers:[{lightness:29},{weight:.2},{color:"#ff0000"},{visibility:"off"}]},{featureType:"road.arterial",elementType:"geometry",stylers:[{color:"#000000"},{lightness:18}]},{featureType:"road.local",elementType:"geometry",stylers:[{color:"#000000"},{lightness:16}]},{featureType:"transit",elementType:"geometry",stylers:[{color:"#000000"},{lightness:19}]},{featureType:"water",elementType:"geometry",stylers:[{color:"#000000"},{lightness:17}]}]}),o='<div class="pin"></div>\n              <div class="pin-effect"></div>';i.prototype=new google.maps.OverlayView;var n=new google.maps.LatLngBounds(new google.maps.LatLng(e));function i(e,t,n,o){this.map_=e,this.html_=n,this.coordinates_=t,this.bounds_=o,this.div_=null,this.setMap(e)}new i(t,e,o,n),i.prototype.onAdd=function(){var e=document.createElement("div");e.classList.add("marker"),e.innerHTML=o,this.div_=e;var t=this.getPanes();t.overlayMouseTarget.appendChild(this.div_);var n=document.createElement("div");n.classList.add("map-overlay"),t.overlayShadow.appendChild(n)},i.prototype.draw=function(){var e=this.getProjection(),t=e.fromLatLngToDivPixel(this.bounds_.getSouthWest()),n=e.fromLatLngToDivPixel(this.bounds_.getNorthEast()),o=this.div_;o.style.left=t.x+"px",o.style.top=n.y+"px"},t.addListener("zoom_changed",function(){var e=this.getZoom();e<=16&&"hybrid"===this.getMapTypeId()&&this.setMapTypeId("roadmap"),16<=e&&this.setMapTypeId("hybrid")})};!function(e,t){var n=document.querySelector(e),r=n.querySelector(".slider-wrapper"),l=n.querySelectorAll(".slider-item"),s=(n.querySelectorAll(".slider-control"),n.querySelector(".slider-control-left"),n.querySelector(".slider-control-right"),parseFloat(getComputedStyle(r).width)),a=parseFloat(getComputedStyle(l[0]).width),c=0,d=0,u=a/s*100,m=[],p=0,f=n.innerHTML,h=[{active:!1,minWidth:0,count:1},{active:!1,minWidth:980,count:2}],o={isCycling:!1,direction:"right",interval:3e3,pause:!0},y=Math.round(s/a),i=null;for(var g in t)g in o&&(o[g]=t[g]);var v=0;function L(){var o=0,i=parseFloat(document.body.clientWidth);h.forEach(function(e,t,n){h[t].active=!1,i>=h[t].minWidth&&(o=t)}),h[o].active=!0}function E(e){var t;!function(e){function t(e,t){return document.elementFromPoint(e,t)}var n=e.getBoundingClientRect(),o=window.innerWidth||document.documentElement.clientWidth,i=window.innerHeight||document.documentElement.clientHeight;return!(n.right<0||n.bottom<0||n.left>o||n.top>i)&&(e.contains(t(n.left,n.top))||e.contains(t(n.right,n.top))||e.contains(t(n.right,n.bottom))||e.contains(t(n.left,n.bottom)))}(n)||("right"===e&&(++c+s/a-1>=w.getMax()&&(t=w.getItemMin(),m[t].position=w.getMax()+1,m[t].transform+=100*m.length,m[t].item.style.transform="translateX(".concat(m[t].transform,"%)")),i===m.length-1?(m[i].item.classList.remove("item-scale"),m[i=0].item.classList.add("item-scale")):(m[i].item.classList.remove("item-scale"),m[++i].item.classList.add("item-scale")),d-=u),"left"===e&&(--c<=w.getMin()&&(t=w.getItemMax(),m[t].position=w.getMin()-1,m[t].transform-=100*m.length,m[t].item.style.transform="translateX(".concat(m[t].transform,"%)")),0===i?(m[i].item.classList.remove("item-scale"),i=m.length-1,m[i].item.classList.add("item-scale")):(m[i].item.classList.remove("item-scale"),m[--i].item.classList.add("item-scale")),d+=u),r.style.transform="translateX("+d+"%)")}function b(e){o.isCycling&&(p=setInterval(function(){E(e)},o.interval))}function T(e){if(e.target.classList.contains("slider-control")){e.preventDefault();var t=e.target.classList.contains("slider-control-right")?"right":"left";E(t),clearInterval(p),b(o.direction)}}function S(){"hidden"===document.visibilityState?clearInterval(p):(clearInterval(p),b(o.direction))}l.forEach(function(e,t){m.push({item:e,position:t,transform:0})}),3===y?m[i=1].item.classList.add("item-scale"):m[i=0].item.classList.add("item-scale");var w={getItemMin:function(){var n=0;return m.forEach(function(e,t){e.position<m[n].position&&(n=t)}),n},getItemMax:function(){var n=0;return m.forEach(function(e,t){e.position>m[n].position&&(n=t)}),n},getMin:function(){return m[w.getItemMin()].position},getMax:function(){return m[w.getItemMax()].position}};n.addEventListener("click",T),o.pause&&o.isCycling&&(n.addEventListener("mouseenter",function(){clearInterval(p)}),n.addEventListener("mouseleave",function(){clearInterval(p),b(o.direction)})),document.addEventListener("visibilitychange",S,!1),window.addEventListener("resize",function(){var o=0,i=parseFloat(document.body.clientWidth);h.forEach(function(e,t,n){i>=h[t].minWidth&&(o=t)}),o!==function(){var o;return h.forEach(function(e,t,n){h[t].active&&(o=t)}),o}()&&(L(),clearInterval(p),n.innerHTML=f,r=n.querySelector(".slider-wrapper"),l=n.querySelectorAll(".slider-item"),n.querySelectorAll(".slider-control"),n.querySelector(".slider-control-left"),n.querySelector(".slider-control-right"),s=parseFloat(getComputedStyle(r).width),a=parseFloat(getComputedStyle(l[0]).width),d=c=0,u=a/s*100,m=[],y=Math.round(s/a),l.forEach(function(e,t){m.push({item:e,position:t,transform:0})}))}),n.addEventListener("touchstart",function(e){v=e.changedTouches[0].clientX}),n.addEventListener("touchend",function(e){var t=e.changedTouches[0].clientX-v;50<t?E("left"):t<-50&&E("right")}),"visible"===document.visibilityState&&b(o.direction),L()}(".slider",{});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
