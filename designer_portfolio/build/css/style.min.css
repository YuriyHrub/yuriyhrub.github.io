html{height:100%;box-sizing:border-box;font-size:16px;line-height:1.5em}html[data-useragent*="Trident/7.0"] .pin-effect{-webkit-animation:none;animation:none}*,::after,::before{box-sizing:inherit;margin-top:0}body{left:0;color:#f5f5f5;background-color:#010500;overflow-x:hidden}@media screen and (min-width:1200px) and (orientation:landscape){body{overflow:hidden}}a{text-decoration:none}ul{margin:0;padding-left:0;list-style-type:none}.primary-font{font-family:Prompt,Calibri,serif;color:inherit}.secondary-font{font-family:'Open Sans','Times New Roman',sans-serif;color:inherit}.lf-offset{margin-left:16.666%}.icon{display:inline-block;stroke-width:0;width:inherit;height:inherit;stroke:currentColor;fill:#333}.visually-hidden{position:absolute;clip:rect(0,0,0,0);width:1px;height:1px;margin:-1px}@media screen and (max-width:1199px){.site-section{padding-top:3em;padding-bottom:3em}}.container{position:relative;margin-right:auto;margin-left:auto;max-width:1200px}@media screen and (min-width:1920px){.container{max-width:1300px}}[class^=l-]{display:-webkit-box;display:flex;flex-wrap:wrap}[class^=l-]>div{padding:0 15px}.l-center>div{width:100%}.burger-menu{position:absolute;z-index:1000;right:1em;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;width:1.3rem;height:1.876rem;background-color:#010500}@media screen and (max-width:1199px){.burger-menu{top:1em;right:2em;width:2rem}}@media screen and (min-width:1200px){.burger-menu:hover{cursor:pointer}}.burger-menu span{position:relative;display:inline-block;width:50%;height:3px;background-color:#f5f5f5;-webkit-transition:background-color .3s 0s cubic-bezier(.59,.54,.47,.96);transition:background-color .3s 0s cubic-bezier(.59,.54,.47,.96)}@media screen and (min-width:1200px){.burger-menu span{height:2px}}.burger-menu span::after,.burger-menu span::before{content:'';left:-40%;position:absolute;display:inline-block;width:180%;height:inherit;background-color:#f0f0f0;-webkit-transition:top .3s cubic-bezier(.59,.54,.47,.96) .3s,-webkit-transform .3s cubic-bezier(.59,.54,.47,.96) 0s;transition:top .3s cubic-bezier(.59,.54,.47,.96) .3s,-webkit-transform .3s cubic-bezier(.59,.54,.47,.96) 0s;transition:top .3s cubic-bezier(.59,.54,.47,.96) .3s,transform .3s cubic-bezier(.59,.54,.47,.96) 0s;transition:top .3s cubic-bezier(.59,.54,.47,.96) .3s,transform .3s cubic-bezier(.59,.54,.47,.96) 0s,-webkit-transform .3s cubic-bezier(.59,.54,.47,.96) 0s}.burger-menu span::before{top:-9px}.burger-menu span::after{top:9px}@media screen and (min-width:1200px){.burger-menu span::before{top:-6px}.burger-menu span::after{top:6px}}.burger-menu.js-active span{background-color:transparent;-webkit-transition-delay:.3s;transition-delay:.3s}.burger-menu.js-active span::after,.burger-menu.js-active span::before{top:0}.burger-menu.js-active span::before{-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}.burger-menu.js-active span::after{-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg)}.burger-menu.js-active span::after,.burger-menu.js-active span::before{-webkit-transition:top .3s cubic-bezier(.59,.54,.47,.96) 0s,-webkit-transform .3s cubic-bezier(.59,.54,.47,.96) .3s;transition:top .3s cubic-bezier(.59,.54,.47,.96) 0s,-webkit-transform .3s cubic-bezier(.59,.54,.47,.96) .3s;transition:top .3s cubic-bezier(.59,.54,.47,.96) 0s,transform .3s cubic-bezier(.59,.54,.47,.96) .3s;transition:top .3s cubic-bezier(.59,.54,.47,.96) 0s,transform .3s cubic-bezier(.59,.54,.47,.96) .3s,-webkit-transform .3s cubic-bezier(.59,.54,.47,.96) .3s}.l-header>div:nth-child(1){width:16.6666%}.l-header>div:nth-child(2){width:83.3333%}.header{position:fixed;z-index:2;width:100%}@media screen and (max-width:1199px){.header{height:3.5em;background-color:#010500}}@media screen and (min-width:1200px){.header{padding-top:1.1em}}.logo{position:absolute;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;font-size:1rem;font-weight:500;letter-spacing:.1em;text-transform:uppercase}@media screen and (max-width:1199px){.logo{top:1em;-webkit-box-align:end;align-items:flex-end}}.logo-icon{margin-right:.5em;width:1.879em;height:1.75em}.main-menu{position:absolute;top:0;right:0;padding-right:1em;display:-webkit-box;display:flex;-webkit-box-pack:end;justify-content:flex-end;width:100vw;height:100vh;background-color:#010500;overflow:auto;opacity:1;-webkit-transition:height 0s cubic-bezier(.59,.54,.47,.96),opacity .4s cubic-bezier(.59,.54,.47,.96),-webkit-transform .4s cubic-bezier(.59,.54,.47,.96);transition:height 0s cubic-bezier(.59,.54,.47,.96),opacity .4s cubic-bezier(.59,.54,.47,.96),-webkit-transform .4s cubic-bezier(.59,.54,.47,.96);transition:transform .4s cubic-bezier(.59,.54,.47,.96),height 0s cubic-bezier(.59,.54,.47,.96),opacity .4s cubic-bezier(.59,.54,.47,.96);transition:transform .4s cubic-bezier(.59,.54,.47,.96),height 0s cubic-bezier(.59,.54,.47,.96),opacity .4s cubic-bezier(.59,.54,.47,.96),-webkit-transform .4s cubic-bezier(.59,.54,.47,.96)}@media screen and (min-width:900px){.main-menu{width:30vw}}.main-menu.menu-hide{opacity:0;height:0;z-index:-1000;-webkit-transform:perspective(900px) translateZ(-300px);transform:perspective(900px) translateZ(-300px);-webkit-transition:height 0s cubic-bezier(.59,.54,.47,.96) .7s,opacity .4s cubic-bezier(.59,.54,.47,.96) 0s,-webkit-transform .4s cubic-bezier(.59,.54,.47,.96) 0s;transition:height 0s cubic-bezier(.59,.54,.47,.96) .7s,opacity .4s cubic-bezier(.59,.54,.47,.96) 0s,-webkit-transform .4s cubic-bezier(.59,.54,.47,.96) 0s;transition:transform .4s cubic-bezier(.59,.54,.47,.96) 0s,height 0s cubic-bezier(.59,.54,.47,.96) .7s,opacity .4s cubic-bezier(.59,.54,.47,.96) 0s;transition:transform .4s cubic-bezier(.59,.54,.47,.96) 0s,height 0s cubic-bezier(.59,.54,.47,.96) .7s,opacity .4s cubic-bezier(.59,.54,.47,.96) 0s,-webkit-transform .4s cubic-bezier(.59,.54,.47,.96) 0s}.menu-list{margin-top:3em;text-align:right}.menu-link{position:relative;padding:0 .2em;display:inline;font-size:3.44rem;line-height:1.35em;font-weight:700;color:#f5f5f5}.menu-link::before{content:'';position:absolute;top:47%;left:50%;display:inline-block;width:0%;height:.24em;background-color:#0f33ff;-webkit-transition:all .3s cubic-bezier(.59,.54,.47,.96);transition:all .3s cubic-bezier(.59,.54,.47,.96)}.menu-link.link-active::before,.menu-link:hover::before{width:100%;left:0}.nav-panel{display:none}@media screen and (min-width:1200px){.nav-panel{position:absolute;top:5.4em;left:1em;z-index:1;margin-left:-2.07em;display:block;height:35.8em;font-size:.875rem;font-weight:300}.nav-panel-list{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;height:100%;background-image:-webkit-gradient(linear,left top,right top,from(rgba(255,255,255,.1)),to(rgba(255,255,255,.1))),url(../img/points_bg.png);background-image:-webkit-linear-gradient(left,rgba(255,255,255,.1),rgba(255,255,255,.1)),url(../img/points_bg.png);background-image:linear-gradient(to right,rgba(255,255,255,.1),rgba(255,255,255,.1)),url(../img/points_bg.png);background-size:2px 100%,4px 6em;background-repeat:no-repeat,repeat-y;background-position:2.07em 0,2em 0}.panel-item:not(:last-child){margin-bottom:6.3em}.panel-item:first-child{margin-top:1em}.panel-link{position:relative;color:rgba(255,255,255,.3);-webkit-transition:color .3s cubic-bezier(.59,.54,.47,.96);transition:color .3s cubic-bezier(.59,.54,.47,.96)}.panel-link.link-active{color:#f0f0f0}.panel-link::before{content:'';position:absolute;top:50%;left:2em;display:inline-block;width:4px;height:4px;border-radius:50%;background-color:rgba(255,255,255,.9);-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);-webkit-transition:all .3s cubic-bezier(.59,.54,.47,.96);transition:all .3s cubic-bezier(.59,.54,.47,.96)}.panel-link.link-active::before,.panel-link:hover::before{background-color:#0f33ff;box-shadow:0 0 5px 3px #0f33ff}.link-num,.link-txt{-webkit-transition-timing-function:cubic-bezier(.59,.54,.47,.96);transition-timing-function:cubic-bezier(.59,.54,.47,.96);-webkit-transition-duration:.3s;transition-duration:.3s}.link-num{display:inline-block;-webkit-transform:translateX(3em);-ms-transform:translateX(3em);transform:translateX(3em);-webkit-transition-property:-webkit-transform;transition-property:-webkit-transform;transition-property:transform;transition-property:transform,-webkit-transform}.panel-link.link-active .link-num{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}.link-txt{padding-left:2em;color:transparent;-webkit-transition-property:color;transition-property:color}.panel-link.link-active .link-txt{-webkit-transition-delay:.2s;transition-delay:.2s;color:#f0f0f0}}@media screen and (min-width:1200px) and (min-height:768px){.nav-panel{top:10em}}@media screen and (min-width:1200px) and (min-height:1023px){.nav-panel{top:13em}}@media screen and (min-width:1200px){.l-home-section>div{margin-left:16.6666%}}.l-home-section>div:nth-child(1){width:100%;padding-right:0}@media screen and (min-width:1200px){.l-home-section>div:nth-child(1){width:calc(75% + 15px)}}.l-home-section>div:nth-child(2){width:100%}@media screen and (max-width:599px){.l-home-section>div:nth-child(2){padding:0}}@media screen and (min-width:1200px){.l-home-section>div:nth-child(2){width:75%;padding:0}}.l-home-tabs>div{width:100%}@media screen and (min-width:900px){.l-home-tabs>div{width:33.333%}}.home-heading-block{padding-bottom:6.1em;background-image:url(../img/comsmo-man_bg.png);background-repeat:no-repeat;background-size:contain;background-position:right bottom}@media screen and (max-width:599px){.home-heading-block{background-position:center bottom}}.home-heading{margin-bottom:.7em;padding-top:.61em;line-height:.9em;letter-spacing:.02em}@media screen and (max-width:599px){.home-heading{margin-left:0;margin-bottom:2em;font-size:3rem;text-align:center}}@media screen and (min-width:600px){.home-heading{max-width:500px;font-size:5.125rem}}.feedback-btn{padding-top:.4em;padding-bottom:.4em;text-transform:uppercase;line-height:1.5em;letter-spacing:.1em;font-weight:600;background-color:#0f33ff;color:#f0f0f0;text-align:center}.feedback-btn-anim{position:relative;top:0;z-index:0;display:block;background-color:transparent;text-align:left;overflow:hidden}@media screen and (max-width:599px){.feedback-btn{margin-left:auto;margin-right:auto;font-size:1.125rem;width:70%;border-radius:6px;background-color:rgba(0,50,255,.5);text-align:center}}@media screen and (min-width:600px){.feedback-btn{width:100px;font-size:.8125rem}}@media screen and (min-width:900px){.btn-fixed{position:fixed;z-index:1000;top:1.5em;left:50%;padding-top:.5em;padding-bottom:.5em;width:100px;font:600 .81245rem/1.5em Prompt,san-serif;color:#f5f5f5;text-align:center;letter-spacing:1px;text-transform:uppercase;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);background-color:rgba(0,50,255,1)}}@media screen and (min-width:600px){.feedback-btn::after,.feedback-btn::before{content:'';position:absolute;display:inline-block}.feedback-btn-anim::before{right:18%;top:27%;width:1.4em;height:1.2em;background-image:url(../img/arrow_bg.png);background-repeat:no-repeat;-webkit-animation:moveToLeft 1.8s cubic-bezier(.59,.54,.47,.96) 1s infinite;animation:moveToLeft 1.8s cubic-bezier(.59,.54,.47,.96) 1s infinite}.feedback-btn-anim::after{z-index:-1;left:9%;right:0;top:0;bottom:0;background-color:#0f33ff;-webkit-transition:all .3s cubic-bezier(.59,.54,.47,.96);transition:all .3s cubic-bezier(.59,.54,.47,.96)}}@media screen and (min-width:900px){.feedback-btn-anim:hover::after{-webkit-transform:translateX(100px);-ms-transform:translateX(100px);transform:translateX(100px)}@-webkit-keyframes moveToLeft{0%{-webkit-transform:translateX(0);transform:translateX(0)}50%{-webkit-transform:translateX(16px);transform:translateX(16px)}100%{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes moveToLeft{0%{-webkit-transform:translateX(0);transform:translateX(0)}50%{-webkit-transform:translateX(16px);transform:translateX(16px)}100%{-webkit-transform:translateX(0);transform:translateX(0)}}}.home-tabs{box-shadow:0 -1px rgba(255,255,255,.2)}@media screen and (min-width:1200px){.home-tabs{position:relative}}@media screen and (min-width:1200px){.tabs-toggle{position:absolute;top:-2px;left:0;width:30px;height:4px;background-color:#0f33ff;box-shadow:0 0 7px 2px rgba(0,50,255,1);-webkit-transition:all .3s cubic-bezier(.59,.54,.47,.96);transition:all .3s cubic-bezier(.59,.54,.47,.96)}}.tab{padding-top:1.9em;font-weight:200}@media screen and (max-width:899px){.tab{text-align:center}}@media screen and (min-width:1200px){.tab{color:rgba(255,255,255,.2);-webkit-transition:color .6s cubic-bezier(.59,.54,.47,.96) 0s;transition:color .6s cubic-bezier(.59,.54,.47,.96) 0s}.tab.tab-active{color:inherit;-webkit-transition-delay:.3s;transition-delay:.3s}}.tab-title{margin-bottom:.5em;font-size:1.125rem;line-height:1.5em;text-transform:uppercase;font-weight:600}.tab-txt{font-size:1rem}.l-works{-webkit-box-pack:center;justify-content:center}.l-works>div{width:83.3333%}.slider-title{padding-top:1.3em;margin-bottom:1.3em;font-size:1.875rem;line-height:1.2em;text-align:center}.slider{position:relative;display:-webkit-box;display:flex;font-size:1rem;-webkit-box-align:center;align-items:center;height:445px;overflow:hidden}.slider p{margin-bottom:0}.slider-wrapper{margin:0 auto;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;height:100%;width:100%;-webkit-transition:-webkit-transform .7s cubic-bezier(.59,.54,.47,.96);transition:-webkit-transform .7s cubic-bezier(.59,.54,.47,.96);transition:transform .7s cubic-bezier(.59,.54,.47,.96);transition:transform .7s cubic-bezier(.59,.54,.47,.96),-webkit-transform .7s cubic-bezier(.59,.54,.47,.96)}.slider-item{display:-webkit-box;display:flex;-webkit-box-flex:0;flex:0 0 100%;-webkit-box-pack:center;justify-content:center}@media screen and (min-width:900px){.slider-item{-webkit-box-flex:0;flex:0 0 33.333%}}.slider-item.item-scale{height:100%}.item-inner-wrap{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;-webkit-transition:-webkit-transform .7s cubic-bezier(.59,.54,.47,.96);transition:-webkit-transform .7s cubic-bezier(.59,.54,.47,.96);transition:transform .7s cubic-bezier(.59,.54,.47,.96);transition:transform .7s cubic-bezier(.59,.54,.47,.96),-webkit-transform .7s cubic-bezier(.59,.54,.47,.96);-webkit-transform-origin:50% 43%;-ms-transform-origin:50% 43%;transform-origin:50% 43%}@media screen and (max-width:599px){.slider-item.item-scale .item-inner-wrap{-webkit-transform:scale(1.3);-ms-transform:scale(1.3);transform:scale(1.3)}}@media screen and (min-width:600px) and (max-width:899px){.slider-item.item-scale .item-inner-wrap{-webkit-transform:scale(1.5);-ms-transform:scale(1.5);transform:scale(1.5)}}@media screen and (min-width:900px){.slider-item.item-scale .item-inner-wrap{-webkit-transform:scale(1.4);-ms-transform:scale(1.4);transform:scale(1.4)}}@media screen and (min-width:1200px){.slider-item.item-scale .item-inner-wrap{-webkit-transform:scale(1.9);-ms-transform:scale(1.9);transform:scale(1.9)}}@media screen and (min-width:1200px){.slider-control{position:absolute;top:35%;display:-webkit-box;display:flex;width:54px;height:54px;border-radius:50%;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;background-color:rgba(255,255,255,.1)}.slider-control:focus,.slider-control:hover{text-decoration:none;outline:0;opacity:.9}.slider-control-left{left:0}.slider-control-right{right:0}.slider-control::before{content:'';display:inline-block;width:19px;height:15px;background:transparent no-repeat center center;background-size:100% 100%}.slider-control-left::before{background-image:url(../img/arrow_bg.png);-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.slider-control-right::before{background-image:url(../img/arrow_bg.png)}}.slider-item img{width:170px;height:auto}@media screen and (min-width:900px){.slider-item img{border-radius:50%}}.slider-item-description{max-width:300px;font-weight:200;text-align:center}@media screen and (max-width:899px){.slider-item-description{-webkit-transform:scale(.8);-ms-transform:scale(.8);transform:scale(.8)}}@media screen and (min-width:900px) and (max-width:1199px){.slider-item-description{-webkit-transform:scale(.7);-ms-transform:scale(.7);transform:scale(.7)}}@media screen and (min-width:1200px){.slider-item-description{margin-top:-1em;-webkit-transform:scale(.5);-ms-transform:scale(.5);transform:scale(.5)}}.item-description-title{margin-bottom:.7em;font-size:1.4rem;line-height:1.5em;font-weight:600;letter-spacing:1px;color:rgba(255,255,255,.4);text-transform:uppercase;-webkit-transition:color .7s cubic-bezier(.59,.54,.47,.96);transition:color .7s cubic-bezier(.59,.54,.47,.96)}.slider-item.item-scale .item-description-title{color:rgba(255,255,255,1)}.item-description-txt{opacity:0;-webkit-transition:opacity .7s cubic-bezier(.59,.54,.47,.96);transition:opacity .7s cubic-bezier(.59,.54,.47,.96)}.slider-item.item-scale .item-description-txt{opacity:1}.info-section{background-image:url(../img/woman_bg.png);background-repeat:no-repeat;background-position:80% center}@media screen and (min-width:1200px){.l-info-section>div{margin-left:16.6666%}}.l-info-section>div:nth-child(1){width:100%;padding-right:0}@media screen and (min-width:1200px){.l-info-section>div:nth-child(1){width:75%}}.l-info-section>div:nth-child(2){width:100%}@media screen and (min-width:900px){.l-info-section>div:nth-child(2){width:65%}}@media screen and (min-width:1200px){.l-info-section>div:nth-child(2){width:50%}}.l-last-posts{-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;flex-wrap:wrap}.l-last-posts>div{margin-bottom:2em;padding-left:0;width:33.333%}@media screen and (max-width:599px){.l-last-posts>div{padding-left:5px;padding-right:5px;width:50%}}.info-heading-block{margin-top:0;padding-bottom:2.8em}@media screen and (max-width:599px){.info-heading-block{background-position:center bottom}}.info-heading{margin-bottom:.7em;padding-top:1em;line-height:.9em;letter-spacing:.02em}@media screen and (max-width:599px){.info-heading{margin-left:0;margin-bottom:2em;font-size:3rem;text-align:center}}@media screen and (min-width:600px){.info-heading{max-width:410px;font-size:4.7rem}}.info-btn{position:relative;z-index:0;padding-top:.7em;padding-bottom:.7em;display:block;line-height:1.5em;font-weight:600;color:#f0f0f0;text-transform:uppercase;letter-spacing:.1em}@media screen and (max-width:599px){.info-btn{margin-left:auto;margin-right:auto;font-size:1.125rem;width:70%;border-radius:6px;background-color:rgba(0,50,255,.5);text-align:center}}@media screen and (min-width:600px){.info-btn{width:100px;font-size:.8125rem}}@media screen and (min-width:600px){.info-btn::before{content:'';position:absolute;display:inline-block}.info-btn::before{right:18%;top:30%;width:1.4em;height:1.2em;background-image:url(../img/arrow_bg.png);background-repeat:no-repeat;-webkit-animation:moveToLeft 3s cubic-bezier(.59,.54,.47,.96) 1s infinite;animation:moveToLeft 3s cubic-bezier(.59,.54,.47,.96) 1s infinite}}.last-posts-preview{margin-bottom:2em}.item-responsive{position:relative;padding-top:50%}.item-responsive::before{content:'';display:block;width:100%}.post-preview{position:absolute;top:0;left:0;right:0;bottom:0;border:10px solid rgba(0,50,255,1);-webkit-transition:border .3s cubic-bezier(.59,.54,.47,.96);transition:border .3s cubic-bezier(.59,.54,.47,.96);background-repeat:no-repeat}.post-preview-1{background-image:url(../img/post-preview_1.jpg);background-position:30% 45%;background-size:125%}@media screen and (max-width:599px){.post-preview-1{background-size:100%}}.post-preview-2{background-image:url(../img/post-preview_2.jpg);background-position:50% 23%;background-size:150%}@media screen and (max-width:599px){.post-preview-2{background-size:100%}}.post-preview-3{background-image:url(../img/post-preview_3.jpg);background-position:50% 7%;background-size:140%}@media screen and (max-width:599px){.post-preview-3{background-size:100%}}@media screen and (min-width:1200px){.post-preview:hover{border-width:0}}.post-preview-title{position:absolute;bottom:-5.1em;left:-1em;font-size:.875rem;letter-spacing:.1em;text-transform:uppercase}.post-preview-title a{padding:2em;display:block;color:#f0f0f0}.contact-section{position:relative}.contact-section.site-section{padding-top:0;padding-bottom:0}#map{height:100vh;max-height:1080px}.map-overlay{height:100vh;background-image:-webkit-radial-gradient(circle,rgba(0,0,0,.1),rgba(0,0,0,.7) 25%,rgba(0,0,0,.9) 50%,rgba(0,0,0,1) 70%);background-image:radial-gradient(circle,rgba(0,0,0,.1),rgba(0,0,0,.7) 25%,rgba(0,0,0,.9) 50%,rgba(0,0,0,1) 70%);-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}@media screen and (max-width:899px){.map-overlay{background-image:-webkit-radial-gradient(circle,rgba(0,0,0,.1),rgba(0,0,0,.7),rgba(0,0,0,1));background-image:radial-gradient(circle,rgba(0,0,0,.1),rgba(0,0,0,.7),rgba(0,0,0,1))}}@-webkit-keyframes pulsate{0%{-webkit-transform:scale(.1);transform:scale(.1);opacity:0}50%{opacity:1}100%{-webkit-transform:scale(1.2);transform:scale(1.2);opacity:0}}@keyframes pulsate{0%{-webkit-transform:scale(.1);transform:scale(.1);opacity:0}50%{opacity:1}100%{-webkit-transform:scale(1.2);transform:scale(1.2);opacity:0}}.marker{width:100px;height:100px;position:absolute;display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.pin{width:25px;height:25px;background:rgba(0,50,255,1);border-radius:50%;z-index:1000;cursor:pointer}.pin-effect{width:70px;height:70px;position:absolute;display:block;background:rgba(0,50,255,.5);border-radius:50%;opacity:0;-webkit-animation:pulsate 2s cubic-bezier(.59,.54,.47,.96) infinite;animation:pulsate 2s cubic-bezier(.59,.54,.47,.96) infinite}.pop-up-container{position:absolute;top:50%;left:60%;width:300px;height:360px;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.map-pop-up{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;justify-content:space-around;-webkit-box-align:center;align-items:center;width:inherit;height:inherit;font-size:.875rem;line-height:1.5em;color:#f5f5f5;background-color:#0b0b0b;overflow:hidden;opacity:1;box-shadow:0 0 10px 2px #0b0b0b;-webkit-transition-property:opacity,height;transition-property:opacity,height;-webkit-transition-timing-function:cubic-bezier(.59,.54,.47,.96);transition-timing-function:cubic-bezier(.59,.54,.47,.96);-webkit-transition-duration:.3s,0s;transition-duration:.3s,0s;-webkit-transition-delay:.3s,0s;transition-delay:.3s,0s}@media screen and (max-width:899px){.pop-up-container{position:static;-webkit-transform:none;-ms-transform:none;transform:none;width:100%}}.pop-up-container.pop-up-hidden .map-pop-up{opacity:0;height:0;-webkit-transition-delay:0s,.3s;transition-delay:0s,.3s}.pop-up-toggle{display:none}@media screen and (min-width:900px){.pop-up-toggle{padding:1em;position:absolute;top:0;right:0;display:inline-block;border:none;background-color:transparent;z-index:1;cursor:pointer;outline:0}.pop-up-toggle span{display:inline-block;width:10px;height:10px;border-radius:50%;background-color:transparent;box-shadow:0 0 0 2px rgba(0,50,255,1);-webkit-transition:all .4s cubic-bezier(.59,.54,.47,.96);transition:all .4s cubic-bezier(.59,.54,.47,.96)}.pop-up-container.pop-up-hidden .pop-up-toggle span{background-color:rgba(0,50,255,1);box-shadow:0 0 0 2px transparent}}.address{padding-top:1.7em;font-style:normal}.map-pop-up a{display:block;color:inherit}.tel{margin-bottom:1em}.map-pop-up .feedback-btn{margin-bottom:2em;padding:.9em;width:132px}@media screen and (max-width:899px){.map-pop-up .feedback-btn{font-size:1em}}.feedback-form{margin-left:auto;margin-right:auto;padding-left:15px;padding-right:15px;display:-webkit-box;display:flex;flex-wrap:wrap;-webkit-box-pack:center;justify-content:center;max-width:730px}@media screen and (max-width:899px){.feedback-form{font-size:10px}}.form-title{padding-top:.4em;margin-bottom:1.8em;font-size:1.875rem;line-height:1.5em;text-align:center}.service-list{margin-bottom:1.5em;display:-webkit-box;display:flex;flex-wrap:wrap;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;width:100%}.service-item{display:-webkit-box;display:flex;margin-bottom:2.4em}.service-item-1,.service-item-2,.service-item-3{width:33.333%}.service-item-2{-webkit-box-pack:center;justify-content:center}.service-item-3{-webkit-box-pack:end;justify-content:flex-end}.service-item-4,.service-item-5{width:32.5%}.service-item-5{-webkit-box-pack:end;justify-content:flex-end}.service-item-6{width:100%;-webkit-box-pack:center;justify-content:center}@media screen and (max-width:599px){.service-item{width:50%;-webkit-box-pack:center;justify-content:center}}input,label{cursor:pointer}label{position:relative;padding-top:.6em;padding-bottom:.6em;font-size:1.125rem;line-height:1.5em;border:1px solid;box-shadow:0 -1px 0 0 rgba(109,109,109,1),inset 0 -1px 0 0 rgba(109,109,109,1),0 1px 0 0 rgba(174,174,174,1),inset 0 1px 0 0 rgba(159,159,159,1),-.5px 0 0 .5px rgba(226,226,226,1),inset -.5px 0 0 .5px rgba(226,226,226,1),.5px 0 0 .5px rgba(12,12,12,1),inset .5px 0 0 .5px rgba(12,12,12,1);text-align:center;cursor:pointer;-webkit-transition:background-color,padding .4s cubic-bezier(.59,.54,.47,.96);transition:background-color,padding .4s cubic-bezier(.59,.54,.47,.96)}@media screen and (max-width:599px){label{width:100%}}@media screen and (min-width:600px){label{width:200px}}@media screen and (min-width:900px){label{width:200px}}label span{position:absolute;left:2.5em}.icon-check{width:20px;height:15px;fill:rgba(255,255,255,1);opacity:0;-webkit-transition:opacity .3s cubic-bezier(.59,.54,.47,.96),-webkit-transform .4s cubic-bezier(.59,.54,.47,.96);transition:opacity .3s cubic-bezier(.59,.54,.47,.96),-webkit-transform .4s cubic-bezier(.59,.54,.47,.96);transition:transform .4s cubic-bezier(.59,.54,.47,.96),opacity .3s cubic-bezier(.59,.54,.47,.96);transition:transform .4s cubic-bezier(.59,.54,.47,.96),opacity .3s cubic-bezier(.59,.54,.47,.96),-webkit-transform .4s cubic-bezier(.59,.54,.47,.96)}.checked .icon-check{opacity:1;-webkit-transform:translateX(-100%);-ms-transform:translateX(-100%);transform:translateX(-100%)}.checked{background-color:rgba(0,50,255,1);padding-left:25px}input[type=checkbox]{height:0;width:0;display:none}.email,.name{margin-bottom:2.1em;padding-left:.4em;width:45.5%;border:none;border-bottom:1px solid rgba(239,239 ,239,1);font-size:1.5rem;line-height:1.8em;font-weight:300;letter-spacing:2px;color:#f5f5f5;background-color:transparent}.name{margin-right:auto}.email:focus,.name:focus{outline:0}@media screen and (max-width:899px){.email,.name{margin-bottom:1.5em;width:100%;font-size:1.5rem;line-height:1.5em}}input::-webkit-input-placeholder{color:#f5f5f5;font-size:2.1rem}input::-moz-placeholder{color:#f5f5f5;font-size:2.1rem}input::-ms-input-placeholder{color:#f5f5f5;font-size:2.1rem}input:-ms-input-placeholder{color:#f5f5f5;font-size:2.1rem}input::placeholder{color:#f5f5f5;font-size:2.1rem}.send-btn{padding-top:.65em;padding-bottom:.65em;display:flex;justify-content:center;align-items:center;width:57.142%;border:none;font-size:1.125rem;line-height:1.5em;color:inherit;text-transform:uppercase;background-color:rgba(0,50,255,1)}.send-btn:active{background-color:red}@media screen and (max-width:899px){.send-btn{padding-top:1em;padding-bottom:1em;width:80%;background-color:rgba(0,50,255,.5)}}@media screen and (min-width:1200px){.send-btn:hover{background-color:rgba(0,50,200,1)}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
